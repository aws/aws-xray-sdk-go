name: Integration Testing
on: [pull_request]

jobs:
  build_SDK:
    name: Build X-Ray Go SDK With Sample App
    runs-on: ubuntu-latest

    steps:
      - name: Pull in source code from aws-xray-sdk-go Github repository
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '1.14'

      - name: Create a deployment package
        run: mkdir sample-apps/http-server/aws-xray-sdk-go

      - name: Copy X-Ray SDK to deployment package
        run: rsync -r * sample-apps/http-server/aws-xray-sdk-go --exclude sample-apps/

      - name: Zip up the deployment package
        run: |
          cd sample-apps/http-server
          zip -r deploy.zip . -x '*.git*'

      - name: Upload WebApp with X-Ray SDK build artifact
        uses: actions/upload-artifact@v2
        with:
          name: deployment-package
          path: sample-apps/http-server/deploy.zip

  deploy_WebApp:
    name: Deploy X-Ray Instrumented Web App
    needs: build_SDK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download terraform state artifact
        uses: actions/download-artifact@v2
        with:
          name: deployment-package

      - name: Copy deployment package to terraform directory
        run: cp deploy.zip ./terraform

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -var-file="fixtures.us-west-2.tfvars" -no-color
        env:
          TF_VAR_resource_prefix: '${{ github.run_id }}-${{ github.run_number }}'
        continue-on-error: true
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -var-file="fixtures.us-west-2.tfvars" -auto-approve
        env:
          TF_VAR_resource_prefix: '${{ github.run_id }}-${{ github.run_number }}'
        working-directory: ./terraform

      - name: Upload terraform state files for destorying resources
        uses: actions/upload-artifact@v2
        with:
          name: terraform-state-artifact
          path: ./terraform

  test_WebApp:
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Checkout test framework
        uses: actions/checkout@v2
        with:
          repository: aws-observability/aws-otel-test-framework
          ref: terraform

      - name: Run testing suite
        run: ./gradlew :validator:run --args='-c default-xray-trace-validation.yml --endpoint http://${{ github.run_id }}-${{ github.run_number }}-eb-app-env.us-west-2.elasticbeanstalk.com'

  cleanup:
    name: Resource tear down
    needs: test_WebApp
    if: true
    runs-on: ubuntu-latest

    steps:
      - name: Download terraform state artifact
        uses: actions/download-artifact@v2
        with:
          name: terraform-state-artifact

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: set permissions to terraform plugins
        run: chmod -R a+x .terraform/plugins/registry.terraform.io/hashicorp/aws/3.5.0/linux_amd64/*

      - name: Destroy resources
        run: terraform destroy -state="terraform.tfstate" -var-file="fixtures.us-west-2.tfvars" -auto-approve
        env:
          TF_VAR_resource_prefix: '${{ github.run_id }}-${{ github.run_number }}'