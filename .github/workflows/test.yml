name: Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        go:
          - '1.9'
          - '1.10'
          - '1.11'
          - '1.12'
          - '1.13'
          - '1.14'
          - '1'

    steps:

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Set up GOPATH
        run: |
          go version
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          mkdir -p "bin"
          mkdir -p "pkg"
          mkdir -p "src"
          # for dep, bash and Windows
          echo "INSTALL_DIRECTORY=$(pwd)/bin" >> $GITHUB_ENV
        shell: bash
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: src/github.com/aws/aws-xray-sdk-go

      - name: Install Dependencies
        run: |
          if go help mod > /dev/null 2>&1 ; then
            go mod download
          else
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi
        env:
          GO111MODULE: "on"
        shell: bash
        working-directory: src/github.com/aws/aws-xray-sdk-go

      - name: Test
        run: make test-with-race
        env:
          GO111MODULE: "on"
        shell: bash
        working-directory: src/github.com/aws/aws-xray-sdk-go

  benchmark:
    name: XRay-Go-SDK-Benchmarking
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        go:
          - '1.14'

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Set up GOPATH
        run: |
          go version
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          mkdir -p "bin"
          mkdir -p "pkg"
          mkdir -p "src"
          # for dep, bash and Windows
          echo "INSTALL_DIRECTORY=$(pwd)/bin" >> $GITHUB_ENV
        shell: bash
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: src/github.com/aws/aws-xray-sdk-go

      - name: Install Dependencies
        run: |
          if go help mod > /dev/null 2>&1 ; then
            go mod download
          else
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi
        env:
          GO111MODULE: "on"
        shell: bash
        working-directory: src/github.com/aws/aws-xray-sdk-go

      - name: Benchmark
        run: go test -v -benchmem -run=^$$ -bench=. ./... | tee benchmark/output.txt
        env:
          GO111MODULE: "on"
        shell: bash
        working-directory: src/github.com/aws/aws-xray-sdk-go
